openapi: 3.0.3
info:
  title: hqTodo server API
  description: |
    This API documentation is grouped by endpoint function type and ordered by when
    they were created.
    
    The hqTodo application started as a single HTML page with a Gantt Chart and a simple archive section.
    Each section made Ajax requests to information from the ExpressJS server.
    Some of these `todos` endpoints are intended for use by the server,
    capturing data after each major function (such as /todos/raw and /todos/unordered),
    but I decided to expose them as endpoints to aid in debugging.
    I then added more features, such as support data, an archive grouped by week and by tag,
    and I wanted to add separate _project_ pages for each tag, which led to views
    and the `ejs` endpoints.
    Finally, I decided to create a single-page app in React, which uses the `api` endpoints.
    Initially, I was going to make a separate server request for each project page,
    but I ultimately settled on fetching all the data in one call to the server,
    polled every so often for updates to the TODO file.

    **Note:**<br/>
    Each endpoint listed is only partially documented with sample successful response data.
    Also, the data used for this documentation is static rather than hosted
    so that it can function when hosted on Github pages;
    therefore, the **Try it out** buttons do not function properly.
  version: 0.2.0
tags:
  - name: todos
    description: Endpoints used by the original MVC interface
  - name: ejs
    description: Endpoints that display the views in the original MVC interface
  - name: api
    description: Endpoints used by the React client
paths:
  /todos/filelastupdated:
    get:
      tags: [todos]
      description: |
        Timestamp in milliseconds when the TODO file was last modified.
        For client polling to check if the file data needs to be reloaded.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: "string"
                example: "2023-05-17T23:38:56.190Z"
  /todos/raw:
    get:
      tags: [todos]
      description: |
        Entries from TODO file (or cache), filtered to only archived, open,
        and taginfo.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: "object"
                example:
                  {
                    "filelastupdated": "2023-05-17T23:38:56.190Z",
                    "rawTaginfo": [
                      "☐ @f24 Awesome Feature 24 ghihq•24",
                      "☐ @vidz Nifty Video Project url•http://arkadianriver.com/topics/hqtodo.html",
                    ],
                    "rawTodos": [
                      "☐ @today ghihq•21 something I need help with @4h @prjd @blk.email.chris @blk.slack.robin",
                      "☐ @today Add search to the Carbon client @8h @hq @_gf",
                      "☐ document and do more with the daily support feature @hq @_gf",
                    ],
                    "rawArchive": [
                      "✔ @today update readme with new features @3h @hq @_gf @done(2021-09-01 00:10) @project(Todos)",
                      "✔ update the readme image @hq @done(2021-08-31 23:57) @project(Todos)",
                      "✔ provide things by category @4h @hq @done(2021-08-15 10:00) @project(Todos.Epic feature)",
                    ]
                }
  /todos/unordered:
    get:
      tags: [todos]
      description: |
        Open items, with all metadata except gantt ordering info.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: "object"
                example:
                  {
                    "open": {
                      "active": [
                        [
                          {
                            "number": 15,
                            "title": "edit whos-it's video Q",
                            "tagstring": "@prjb @vidz",
                            "est": "6h",
                            "link": "",
                            "color": ""
                          }
                        ]
                      ],
                      "pending": [
                        [
                          {
                            "number": 4,
                            "title": "pull the legend (and maybe the readme) into /doc endpoint",
                            "tagstring": "@hq",
                            "est": "6h",
                            "link": "",
                            "color": ""
                          },
                          {
                            "number": 12,
                            "title": "document feature 24",
                            "tagstring": "@prjc @f24",
                            "est": "12h",
                            "link": "https://github.com/ragnoroct/linkme/issues/9",
                            "color": ""
                          }
                        ],
                        [
                          {
                            "number": 5,
                            "title": "clean up /api data",
                            "tagstring": "@hq @_aj",
                            "est": "12h",
                            "link": "",
                            "color": ""
                          }
                        ]
                      ]
                    },
                    "closed": [],
                    "milestones": [],
                    "interrupts": [
                      []
                    ],
                    "links": [
                      {
                        "id": "k12",
                        "url": "https://github.com/ragnoroct/linkme/issues/9"
                      }
                    ],
                    "blockers": [
                      {
                        "number": 1,
                        "title": "something I need help with",
                        "tagstring": "@prjd",
                        "est": "12h",
                        "link": "https://github.com/arkadianriver/hqtodo/issues/21",
                        "color": "",
                        "hover": "await email response from Chris<br />await slack response from Robin",
                        "startdate": "2023-07-16T19:35:64"
                      }
                    ]
                  }
  /todos:
    get:
      tags: [todos]
      description: |
        Open items, with interrupt and ordering for mermaid.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: "object"
                example:
                  {
                    "open": {
                      "active": [
                        [
                          {
                            "number": 15,
                            "title": "edit whos-it's video Q",
                            "tagstring": "@prjb @vidz",
                            "est": "6h",
                            "link": "",
                            "color": "",
                            "pipeline": "active",
                            "startdate": "2023-07-17T18:00:00"
                        }
                        ]
                      ],
                      "pending": [
                        [
                          {
                            "number": 4,
                            "title": "pull the legend (and maybe the readme) into /doc endpoint",
                            "tagstring": "@hq",
                            "est": "6h",
                            "link": "",
                            "color": "",
                            "pipeline": "pending",
                            "startdate": "2023-07-18T00:00:00"
                          },
                          {
                            "number": 12,
                            "title": "document feature 24",
                            "tagstring": "@prjc @f24",
                            "est": "12h",
                            "link": "https://github.com/ragnoroct/linkme/issues/9",
                            "color": "",
                            "pipeline": "pending",
                            "startdate": "2023-07-19T00:00:00"
                          }
                        ],
                        [
                          {
                            "number": 5,
                            "title": "clean up /api data",
                            "tagstring": "@hq @_aj",
                            "est": "12h",
                            "link": "",
                            "color": "",
                            "pipeline": "pending",
                            "startdate": "2023-07-17T12:00:00"
                          }
                        ]
                      ]
                    },
                    "closed": [],
                    "milestones": [],
                    "interrupts": [
                      null
                    ],
                    "links": [
                      {
                        "id": "k12",
                        "url": "https://github.com/ragnoroct/linkme/issues/9"
                      }
                    ],
                    "blockers": [
                      {
                        "number": 1,
                        "title": "something I need help with",
                        "tagstring": "@prjd",
                        "est": "12h",
                        "link": "https://github.com/arkadianriver/hqtodo/issues/21",
                        "color": "",
                        "hover": "await email response from Chris<br />await slack response from Robin",
                        "startdate": "2023-07-16T19:35:64"
                      }
                    ]
                  }
  /todos/today:
    get:
      tags: [todos]
      description: |
        What you'll do today (for scrum):
        a markdown-formatted list of _in-progress_ items
        (those marked with the `@today` prefix tag).
      responses:
        '200':
          description: successful operation
          content:
            text/plain:
              schema:
                type: "string"
                example: |
                  ```
                  ☐ work with so-and-so on such-and-such
                  ☐ storyboard feature 24 with design
                  ☐ edit whos-it's video Q
                  ```
  /todos/archived:
    get:
      tags: [todos]
      description: |
        Archived items, with metadata extracted
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: "object"
                example:
                  [
                    {
                      "closed_on": "2021-09-01 00:10",
                      "title": "update readme with new features",
                      "link": "",
                      "tags": [
                        "@hq",
                        "@_gf"
                      ],
                      "est": "0.75"
                    },
                    {
                      "closed_on": "2021-08-31 23:57",
                      "title": "update the readme image",
                      "link": "",
                      "tags": [
                        "@hq"
                      ],
                      "est": "0.50"
                    },
                    {
                      "closed_on": "2021-08-30 22:09",
                      "title": "mock data for gh-pages demo of react app",
                      "link": "",
                      "tags": [
                        "@hq"
                      ],
                      "est": "4.00"
                    }
                  ]
  /todos/yesterday:
    get:
      tags: [todos]
      description: |
        What you did yesterday (for scrum):
        a markdown-formatted list of items
        that were marked `@done` yesterday
        (or any day Friday through Sunday, if today is a Monday).
      responses:
        '200':
          description: successful operation
          content:
            text/plain:
              schema:
                type: "string"
                example: |
                  ```
                  ✔ improve doc - use routes
                  ✔ limit doc requests
                  ✔ add Carbon style
                  ```
  /todos/tags:
    get:
      tags: [todos]
      description: |
        Contains (1) the title and link for tags in the Taginfo section of the TODO file
        and (2) the list of all tags, with class and counts.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: "object"
                example:
                  {
                    "taginfo": {
                      "vidz": {
                        "title": "Nifty Video Project",
                        "link": "http://arkadianriver.com/topics/hqtodo.html"
                      },
                      "woot": {
                        "title": "Fabulous stuff",
                        "link": ""
                      }
                    },
                    "tags": [
                      {
                        "count": 3,
                        "class": "hasactive hasopen",
                        "tag": "_aj"
                      },
                      {
                        "count": 2,
                        "class": "hasopen",
                        "tag": "edu"
                      },
                      {
                        "count": 44,
                        "class": "hasactive hasopen",
                        "tag": "prja"
                      },
                      {
                        "count": 22,
                        "class": "hasclosed",
                        "tag": "tools"
                      },
                      {
                        "count": 2,
                        "class": "hasactive hasopen",
                        "tag": "vidz"
                      },
                      {
                        "count": 6,
                        "class": "hasactive",
                        "tag": "woot"
                      }
                    ]
                  }
  /todos/tags/{tagname}:
    get:
      tags: [todos]
      description: |
        The active, done, and archived entries and chart data for the specifiec tag.
      parameters:
      - name: tagname
        description: The name of the tag. See a list of tags with [`/todos/tags`](#operations-todos-get_todos_tags).
        in: path
        schema:
          type: string
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: "object"
                example:
                  {
                    "open": {
                      "active": [
                        {
                          "number": 2,
                          "title": "Add search to the Carbon client",
                          "tagstring": "@hq @_gf",
                          "est": "2.00",
                          "link": "",
                          "color": ""
                        }
                      ],
                      "pending": [
                        {
                          "number": 3,
                          "title": "document and do more with the daily support feature",
                          "tagstring": "@hq @_gf",
                          "est": "0.50",
                          "link": "",
                          "color": ""
                        }
                      ]
                    },
                    "milestones": [],
                    "blockers": [],
                    "closed": [],
                    "archive": [
                      {
                        "closed_on": "2021-09-01 00:10",
                        "title": "update readme with new features",
                        "link": "",
                        "tags": [
                          "@hq",
                          "@_gf"
                        ],
                        "est": "0.75"
                      }
                    ],
                    "chartdata": "[...,{\"x\":\"2021-09-01\",\"y\":\"0.75\"},{\"x\":\"2021-09-02\",\"y\":0},{\"x\":\"2021-09-03\",\"y\":0},{\"x\":\"2021-09-04\",\"y\":0},{\"x\":\"2021-09-05\",\"y\":0},{\"x\":\"2021-09-06\",\"y\":0},{\"x\":\"2021-09-07\",\"y\":0},{\"x\":\"2021-09-08\",\"y\":0},{\"x\":\"2021-09-09\",\"y\":0},{\"x\":\"2021-09-10\",\"y\":0},{\"x\":\"2021-09-11\",\"y\":0},{\"x\":\"2021-09-12\",\"y\":0},{\"x\":\"2021-09-13\",\"y\":0},{\"x\":\"2021-09-14\",\"y\":0},{\"x\":\"2021-09-15\",\"y\":0},{\"x\":\"2021-09-16\",\"y\":0},{\"x\":\"2021-09-17\",\"y\":0},{\"x\":\"2021-09-18\",\"y\":0},{\"x\":\"2021-09-19\",\"y\":0},{\"x\":\"2021-09-20\",\"y\":0},{\"x\":\"2021-09-21\",\"y\":0},{\"x\":\"2021-09-22\",\"y\":0},{\"x\":\"2021-09-23\",\"y\":0},{\"x\":\"2021-09-24\",\"y\":0},{\"x\":\"2021-09-25\",\"y\":0},{\"x\":\"2021-09-26\",\"y\":0},{\"x\":\"2021-09-27\",\"y\":0},{\"x\":\"2021-09-28\",\"y\":0},{\"x\":\"2021-09-29\",\"y\":0},{\"x\":\"2021-09-30\",\"y\":0},...]",
                    "opensum": "2.50",
                    "archivesum": "0.75"
                  }
  /todos/searchdata:
    get:
      tags: [todos]
      description: |
        All the things, with tag array and which state it's in.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: "object"
                example:
                  [
                    {
                      "title": "something I need help with",
                      "tags": [
                        "@prjd"
                      ],
                      "state": "Blockers"
                    },
                    {
                      "title": "edit whos-it's video Q",
                      "tags": [
                        "@prjb",
                        "@vidz"
                      ],
                      "state": "In progress"
                    },
                    {
                      "title": "get thing-a-ma-bob Info from SME-guru",
                      "tags": [
                        "@prja"
                      ],
                      "state": "Backlog"
                    },
                    {
                      "title": "add such-and-such CSS to project page",
                      "tags": [
                        "@prjb",
                        "@f24"
                      ],
                      "state": "Backlog"
                    },
                    {
                      "title": "2023-07-14 - improve doc - use routes",
                      "tags": [],
                      "state": "Archive"
                    },
                    {
                      "title": "2023-07-14 - add Carbon style",
                      "tags": [
                        "@hq"
                      ],
                      "state": "Archive"
                    }
                  ]
  /todos/supportdata:
    get:
      tags: [todos]
      description: |
        All support entries, with time in minutes.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: "object"
                example:
                  [
                    {
                      "closed_on": "2021-07-20 20:23",
                      "title": "person2 - help them with that",
                      "lasted": 190
                    },
                    {
                      "closed_on": "2021-07-20 20:12",
                      "title": "person1 - help them with this",
                      "lasted": 81
                    }
                  ]
  /todos/supportondate/{ondate}:
    get:
      tags: [todos]
      description: |
        Support item list and total time string for a given date.
      parameters:
      - name: ondate
        description: The date you want to query, in the form `YYYY-MM-DD`
        in: path
        schema:
          type: string
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: "object"
                example:
                  {
                    "date": "2021-07-20",
                    "timespent": "4h31m",
                    "closedtickets": [
                      "person2 - help them with that",
                      "person1 - help them with this"
                    ]
                  }
  /todos/archivedbytag:
    get:
      tags: [todos]
      description: |
        Archived items, grouped by tag with group est totals.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: "object"
                example:
                  [
                    {
                      "points": 0.75,
                      "items": [
                        {
                          "closed_on": "2021-09-01 00:10",
                          "title": "update readme with new features",
                          "link": "",
                          "tags": [
                            "@hq",
                            "@_gf"
                          ],
                          "est": "0.75"
                        }
                      ],
                      "tag": "_gf"
                    },
                    {
                      "points": 1.5,
                      "items": [
                        {
                          "closed_on": "2021-02-01 10:42",
                          "title": "voluptatem tempora modi amet dolore",
                          "link": "",
                          "tags": [
                            "@admin"
                          ],
                          "est": "0.50"
                        }
                      ],
                      "tag": "admin"
                    },
                    {
                      "points": 8.25,
                      "items": [
                        {
                          "closed_on": "2021-07-18 21:16",
                          "title": "Paint Sistine Chapel",
                          "link": "",
                          "tags": [
                            "@woot",
                            "@personal"
                          ],
                          "est": "2.00"
                        },
                        {
                          "closed_on": "2021-07-03 23:45",
                          "title": "YYZ prj - take off to the great white north",
                          "link": "",
                          "tags": [
                            "@prjb",
                            "@woot"
                          ],
                          "est": "1.00"
                        }
                      ],
                      "tag": "woot"
                    }
                  ]
  /todos/archivedbyweek:
    get:
      tags: [todos]
      description: |
        Archived items, grouped by week (ending Sunday)
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: "object"
                example:
                  [
                    {
                      "weekEnding": "2021-09-05",
                      "entries": [
                        {
                          "closed_on": "2021-09-01 00:10",
                          "title": "update readme with new features",
                          "link": "",
                          "tags": [
                            "@hq",
                            "@_gf"
                          ],
                          "est": "0.75"
                        },
                        {
                          "closed_on": "2021-08-31 23:57",
                          "title": "update the readme image",
                          "link": "",
                          "tags": [
                            "@hq"
                          ],
                          "est": "0.50"
                        }
                      ]
                    },
                    {
                      "weekEnding": "2021-08-29",
                      "entries": [
                        {
                          "closed_on": "2021-08-29 23:01",
                          "title": "improve doc - use routes",
                          "link": "",
                          "tags": [],
                          "est": "2.25"
                        },
                        {
                          "closed_on": "2021-08-29 01:00",
                          "title": "add Carbon style",
                          "link": "",
                          "tags": [
                            "@hq"
                          ],
                          "est": "4.00"
                        },
                        {
                          "closed_on": "2021-08-26 23:24",
                          "title": "poll server and reload on file change (webhooks too much work on server side)",
                          "link": "",
                          "tags": [
                            "@hq"
                          ],
                          "est": "3.00"
                        }
                      ]
                    }
                  ]
  /ejs/tags/{tagname}:
    get:
      tags: [ejs]
      description: |
        All active, done, archived, and chartdata for given tag.
        (server-side view rendering)
      parameters:
      - name: tagname
        description: The tag name for which the view is displayed.
        in: path
        schema:
          type: string
        required: true
      responses:
        '200':
          description: successful operation
          content:
            text/html:
              schema:
                type: "string"
                example: |
                  <!DOCTYPE html>
                  <html lang="en" style="font-size: 80%">
                    <head>
                    <meta charset="UTF-8" />
                    <title>hqtodo</title>
                    <link
                      href="https://fonts.googleapis.com/css2?family=IBM+Plex+Mono:ital@0;1&display=swap"
                      rel="stylesheet"
                    />
                    <link
                      rel="stylesheet"
                      href="/css/style.css"
                    />
                    </head>
                    <body>
                      <header>
                        <style>
                         ...
                        </style>
                        <div id="tagnav-container" style="position: relative">
                        <div class="tagnav">
                          <h2 class="tagstitle">Tag nav</h2>
                          <ul class="tags">
                            ...
                          </ul>
                          ...
                        </div>
                        <h1 class="tagpagetitle">
                          @_gf 
                        </h1>
                      </header>
                      <main>
                        <h2>Todo (2.50 pts)</h2>
                        ...
                        <h3 class="open">In progress</h3>
                        ...
                        <h3 class="open">Backlog</h3>
                        ...
                        <h2 class="archivetitle">
                          <div>Done (0.75 pts)</div>
                          <div class="pointscale">
                            2 point(s) per 8hr day
                          </div>
                        </h2>
                        <div id="chart"></div>
                        ...
                      </main>
                      <hr/>
                      <footer>
                        ...
                      </footer>
                      <script>
                        ...
                      </script>
                    </body>
                  </html>
  /ejs:
    get:
      tags: [ejs]
      description: |
        Classic server-rendered view of all the things
      responses:
        '200':
          description: successful operation
          content:
            text/html:
              schema:
                type: "string"
                example: |
                  <!DOCTYPE html>
                  <html lang="en" style="font-size:80%">
                    <head>
                      <meta charset="UTF-8">
                      <title>hqtodo</title>
                      <link href="https://fonts.googleapis.com/css2?family=IBM+Plex+Sans&display=swap" rel="stylesheet"/>
                      <link href="https://fonts.googleapis.com/css2?family=IBM+Plex+Mono:ital@0;1&display=swap" rel="stylesheet"/>
                      <link rel="stylesheet" href="/css/style.css">
                    </head>
                    <body>
                      <header>
                    
                        <style>
                          ...
                        </style>
                        <div id="tagnav-container" style="position: relative">
                        <div class="tagnav">
                          ...
                        </div>
                        ...
                        <h1>
                          <div id="hometitle">What &lt;Your Name&gt; is up to</div>
                          <div id="homesubtitle">from 2021-01-07 to ...</div>
                        </h1>
                      </header>
                      <main>
                      ...
                        <div id="ourgantt" class="mermaid">
                        gantt
                          excludes weekends
                          todayMarker off
                  
                            section Blockers
                            something I need help with @prjd :k1, 2023-07-17T09:26:82, 12h
                    
                            section In Progress
                            work with so-and-so on such-and-such @prja @prjb :k8, 2023-07-18T00:00:00, 6h
                            showing a linkme example @prjb @_aj :crit, k6, 2023-07-18T00:00:00, 6h
                    
                            section Backlog
                            pull the legend (and maybe the readme) into /doc endpoint @hq :k4, 2023-07-19T00:00:00, 6h
                            get thing-a-ma-bob Info from SME-guru @prja :k9, 2023-07-19T06:00:00, 12h
                            add such-and-such CSS to project page @prjb @f24 :k10, 2023-07-19T18:00:00, 6h
                            document feature 24 @prjc @f24 :k12, 2023-07-20T00:00:00, 12h
                    
                            click k6 call linkTo("https://github.com/arkadianriver/hqtodo/issues/4")
                            click k12 call linkTo("https://github.com/ragnoroct/linkme/issues/9")
                    
                            click k1 call showHover("k1")
                        </div>
                        ...
                        <h2 class="archivetitle">
                          <div>Archived todos</div>
                          <div class="pointscale">2 point(s) per 8hr day</div>
                        </h2>
                        <div id="chart"></div>
                  
                        <input type="checkbox" id="display-toggle"/>
                        <label for="display-toggle" id="display-button"><span>▹ show the archive</span></label>
                        <label for="display-toggle" id="hide-button"><span>▿ hide the archive</span></label>
                        <div id="archive" style="padding-top:1rem;padding-right:2rem">
                          <h3>by Week</h3>
                          <ul>
                            <li id="2021-09-05">
                              <div class="divider" style="padding:1px 0 1px 6px">Week ending: 2021-09-05</div>
                              <ul id="0" style="margin-left: 0">
                                <li><span class="bullet">✔</span> <span class="date">2021-09-01 00:10</span>
                                  <span class="title" style="font-style:italic">
                                    update readme with new features
                                  </span>
                                  <span class="tagstring">@hq @_gf</span>
                                  <span class="estimate">(0.75)</span>
                                </li>
                                <li><span class="bullet">✔</span> <span class="date">2021-08-31 23:57</span>
                                  <span class="title" style="font-style:italic">
                                    update the readme image
                                  </span>
                                  <span class="tagstring">@hq</span>
                                  <span class="estimate">(0.50)</span>
                                </li>
                                ...
                              </ul><span>&nbsp;</span>
                            </li>
                            <li id="2021-08-29">
                              <div class="divider" style="padding:1px 0 1px 6px">Week ending: 2021-08-29</div>
                              <ul id="1" style="margin-left: 0">
                                <li><span class="bullet">✔</span> <span class="date">2021-08-29 23:01</span>
                                  <span class="title" style="font-style:italic">
                                    improve doc - use routes
                                  </span>
                                  <span class="tagstring"></span>
                                  <span class="estimate">(2.25)</span>
                                </li>
                                <li><span class="bullet">✔</span> <span class="date">2021-08-29 01:00</span>
                                  <span class="title" style="font-style:italic">
                                    add Carbon style
                                  </span>
                                  <span class="tagstring">@hq</span>
                                  <span class="estimate">(4.00)</span>
                                </li>
                                ...
                              </ul>
                            </li>
                          </ul>
                        </div>
                      </main>
                      <hr/>
                      <footer>
                        ...
                      </footer>
                      <script>
                        ...
                      </script>
                    </body>
                  </html>
  /ejs/doc:
    get:
      tags: [ejs]
      description: |
        Documentation (server-side rendering)
      responses:
        '200':
          description: successful operation
          content:
            text/html:
              schema:
                type: "string"
                example: |
                  
                  <!DOCTYPE html>
                  <html><title>api-docs</title>
                  <link rel="stylesheet" href="/css/style.css">
                  <style>
                    dt {
                      font-weight: bold;
                    }
                    dd {
                      margin: 6px 0 24px 24px;
                    }
                  </style>
                  <body>
                  
                  <h1>Available endpoints</h1>
                  <h2>HTML view responses</h2>
                  <dl>
                  <dt><code>GET /</code></dt><dd>Show status page for all the things</dd>
                  <dt><code>GET /tags/:tagname</code></dt><dd>Show status page for a particular tag</dd>
                  </dl>
                  
                  <h2>JSON data responses</h2>
                  <dl>
                  <dt><code>GET /todos/filelastupdated</code></dt><dd>timestamp in milliseconds when the TODO file was last modified</dd>
                  <dt><code>GET /todos/raw</code></dt><dd>entries from TODO file (or cache), filtered to only archived, open, and taginfo</dd>
                  <dt><code>GET /todos/unordered</code></dt><dd>open items, with all metadata except gantt ordering info</dd>
                  <dt><code>GET /todos</code></dt><dd>open items, with interrupt and ordering for mermaid</dd>
                  <dt><code>GET /todos/supportdata</code></dt><dd>all support entries, with time in minutes</dd>
                  <dt><code>GET /todos/supportondate/:YYYY-mm-dd</code></dt><dd>support item list and total time string for given date</dd>
                  <dt><code>GET /todos/archived</code></dt><dd>archived items, with metadata extracted</dd>
                  <dt><code>GET /todos/archivedbytag</code></dt><dd>archived items, grouped by tag with group est totals</dd>
                  <dt><code>GET /todos/archivedbyweek</code></dt><dd>archived items, grouped by week (ending Sunday)</dd>
                  <dt><code>GET /todos/tags</code></dt><dd>(1) title and link for tags in Taginfo section of TODO file<br/>(2) list of all tags, with classs and counts</dd>
                  <dt><code>GET /todos/searchdata</code></dt><dd>all the things, with tag array and which state it's in</dd>
                  </dl>
                  
                  </body>
                  </html>
  /api:
    get:
      tags: [api]
      description: |
        All the things, and I mean _all_, for consumption by React client.
      responses:
        '200':
          description: |
            Successful operation
            
            Because the response for this endpoint contains a large amount of data,
            only the structure is provided in the following example value.
          content:
            application/json:
              schema:
                type: "object"
                example:
                  {
                    "issues": {
                      "open": {
                        "active": [
                          [
                            {
                              "number": 0,
                              "title": "",
                              "tagstring": "",
                              "est": "",
                              "link": "",
                              "color": "",
                              "pipeline": "active",
                              "startdate": ""
                            },
                            {}
                          ]
                        ],
                        "pending": [
                          [
                            {
                              "number": 0,
                              "title": "",
                              "tagstring": "",
                              "est": "",
                              "link": "",
                              "color": "",
                              "pipeline": "pending",
                              "startdate": ""
                            },
                            {}
                          ]
                        ]
                      },
                      "closed": [],
                      "milestones": [],
                      "interrupts": [
                        null
                      ],
                      "links": [
                        {
                          "id": "",
                          "url": ""
                        },
                        {}
                      ],
                      "blockers": [
                        {
                          "number": 0,
                          "title": "",
                          "tagstring": "",
                          "est": "",
                          "link": "",
                          "color": "",
                          "hover": "",
                          "startdate": ""
                        }
                      ]
                    },
                    "byweek": [
                      {
                        "weekEnding": "",
                        "entries": [
                          {
                            "closed_on": "",
                            "title": "",
                            "link": "",
                            "tags": [
                              "",
                              ""
                            ],
                            "est": ""
                          },
                          {}
                        ]
                      },
                      {}
                    ],
                    "bytag": [
                      {
                        "points": 0,
                        "items": [
                          {
                            "closed_on": "",
                            "title": "",
                            "link": "",
                            "tags": [
                              "",
                              ""
                            ],
                            "est": ""
                          },
                          {}
                        ],
                        "tag": ""
                      }
                    ],
                    "entries": [
                      {
                        "closed_on": "",
                        "title": "",
                        "link": "",
                        "tags": [
                          ""
                        ],
                        "est": ""
                      },
                      {}
                    ],
                    "tags": [
                      {
                        "count": 0,
                        "class": "",
                        "tag": ""
                      },
                      {}
                    ],
                    "taginfo": {
                      "{tag1}": {
                        "title": "",
                        "link": ""
                      },
                      "": {
                        "title": "",
                        "link": ""
                      }
                    },
                    "hassupportdata": true,
                    "jsonsupportdata": "[]",
                    "jsonchartdata": "[]",
                    "searchData": "[]",
                    "startdate": "",
                    "fileupdated": "",
                    "pageupdated": "",
                    "whoami": "<Your Name>",
                    "spperday": 2,
                    "hrsperday": 8,
                    "spfactor": 0.08333333333333333,
                    "menuLinks": [
                      {
                        "title": "Optional external link",
                        "link": "https://example.com"
                      }
                    ]
                  }
  /api/tags/{tagname}:
    get:
      tags: [api]
      summary: DEPRECATED
      description: |
        All active, done, archived, and chartdata for given tag.
        DEPRECATED: The data rearrangement is now done in the client
        from the data obtained by the single `/api` endpoint.
      parameters:
      - name: tagname
        description: The tag name for which the data is retrieved.
        in: path
        schema:
          type: string
        required: true
      responses:
        '200':
          description: |
            successful operation
            
            Because the response for this endpoint contains a large amount of data,
            only the structure is provided in the following example value.
          content:
            application/json:
              schema:
                type: "object"
                example:
                  {
                    "fileupdated": "",
                    "pageupdated": "",
                    "spperday": 2,
                    "hrsperday": 8,
                    "whoami": "",
                    "tag": "{tagname}",
                    "taginfo": {
                      "{tag1}": {
                        "title": "",
                        "link": ""
                      },
                      "": {
                        "title": "",
                        "link": ""
                      }
                    },
                    "tags": [
                      {
                        "count": 0,
                        "class": "",
                        "tag": ""
                      },
                      {}
                    ],
                    "tagdata": {
                      "open": {
                        "active": [
                          {
                            "number": 0,
                            "title": "",
                            "tagstring": "",
                            "est": "",
                            "link": "",
                            "color": ""
                          }
                        ],
                        "pending": [
                          {
                            "number": 0,
                            "title": "",
                            "tagstring": "",
                            "est": "",
                            "link": "",
                            "color": ""
                          },
                          {}
                        ]
                      },
                      "milestones": [],
                      "blockers": [],
                      "closed": [],
                      "archive": [
                        {
                          "closed_on": "",
                          "title": "",
                          "link": "",
                          "tags": [
                            "",
                            ""
                          ],
                          "est": ""
                        },
                        {}
                      ],
                      "chartdata": "[...]",
                      "opensum": "",
                      "archivesum": ""
                    },
                    "searchData": "[...]",
                    "menuLinks": [
                      {
                        "title": "",
                        "link": ""
                      }
                    ]
                  }
  /api/doc:
    get:
      tags: [api]
      summary: DEPRECATED
      description: |
        Documentation data for the Express server portion of hqTodo.
        DEPRECATED: Now using SwaggerUI.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: "object"
                example:
                  {
                    "title": "hqTodo server app",
                    "routes": [
                      {
                        "method": "GET",
                        "path": "/todos/filelastupdated",
                        "description": "Timestamp in milliseconds when the TODO file was last modified.\n  For client polling to check if the file data needs to be reloaded."
                      },
                      {
                        "method": "GET",
                        "path": "/todos/raw",
                        "description": "Entries from TODO file (or cache), filtered to only archived, open,\n  and taginfo."
                      },
                      {
                        "method": "GET",
                        "path": "/todos/unordered",
                        "description": "Open items, with all metadata except gantt ordering info."
                      },
                      {
                        "method": "GET",
                        "path": "/todos",
                        "description": "Open items, with interrupt and ordering for mermaid."
                      },
                      {
                        "method": "GET",
                        "path": "/todos/today",
                        "description": "What you'll do today (for scrum)"
                      },
                      {
                        "method": "GET",
                        "path": "/todos/archived",
                        "description": "Archived items, with metadata extracted"
                      },
                      {
                        "method": "GET",
                        "path": "/todos/yesterday",
                        "description": "What you did yesterday (for scrum)"
                      },
                      {
                        "method": "GET",
                        "path": "/todos/tags",
                        "description": "(1) title and link for tags in Taginfo section of TODO file.\n  (2) list of all tags, with classs and counts."
                      },
                      {
                        "method": "GET",
                        "path": "/todos/tags/:tagname",
                        "description": "The active, done, and archived entries and chart data for the specifiec tag."
                      },
                      {
                        "method": "GET",
                        "path": "/todos/searchdata",
                        "description": "All the things, with tag array and which state it's in."
                      },
                      {
                        "method": "GET",
                        "path": "/todos/supportdata",
                        "description": "All support entries, with time in minutes."
                      },
                      {
                        "method": "GET",
                        "path": "/todos/supportondate/:ondate",
                        "description": "Support item list and total time string for a given date."
                      },
                      {
                        "method": "GET",
                        "path": "/todos/archivedbytag",
                        "description": "Archived items, grouped by tag with group est totals."
                      },
                      {
                        "method": "GET",
                        "path": "/todos/archivedbyweek",
                        "description": "Archived items, grouped by week (ending Sunday)"
                      },
                      {
                        "method": "GET",
                        "path": "/ejs/tags/:tagname",
                        "description": "All active, done, archived, and chartdata for given tag.\n  (server-side view rendering)"
                      },
                      {
                        "method": "GET",
                        "path": "/ejs",
                        "description": "Classic server-rendered view of all the things"
                      },
                      {
                        "method": "GET",
                        "path": "/ejs/doc",
                        "description": "Documentation (server-side rendering)"
                      },
                      {
                        "method": "GET",
                        "path": "/webc",
                        "description": "Half-started Web component rendering of all the stuff.\n  Project stopped in favor of React."
                      },
                      {
                        "method": "GET",
                        "path": "/api",
                        "description": "All the things, and I mean _all_, for consumption by React client.\n  TODO: Determine where you want what for optimum client-server efficiency,\n  pushing some of the swizzling to the client, and prune this data accordingly."
                      },
                      {
                        "method": "GET",
                        "path": "/api/tags/:tagname",
                        "description": "All active, done, archived, and chartdata for given tag.\n  (server-side swizzling for client rendering)\n  (deprecated - swizzling done on client now)"
                      },
                      {
                        "method": "GET",
                        "path": "/api/doc",
                        "description": "Documentation data for the Express server portion of hqTodo."
                      },
                      {
                        "method": "GET",
                        "path": "*",
                        "description": "All other routes handled by the client application."
                      }
                    ]
                  }