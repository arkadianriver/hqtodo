// credit: https://tarekraafat.github.io/autoComplete.js/#/playground
const autoCompleteJS = new autoComplete({
  data: {
    src: <%- searchData %>,
    keys: ["title"],
    cache: true,
    filter: (list) => {
      const filteredResults = Array.from(
        new Set(list.map((value) => value.match))
      ).map((k) => {
        return list.find((value) => value.match === k);
      });
      return filteredResults;
    },
  },
  placeHolder: "Search all tasks ...",
  searchEngine: "loose",
  resultsList: {
    element: (list, data) => {
      const info = document.createElement("p");
      if (data.results.length > 0) {
        info.innerHTML = `Displaying <strong>${data.results.length}</strong> out of <strong>${data.matches.length}</strong> results`;
      } else {
        info.innerHTML = `Found <strong>${data.matches.length}</strong> matching results for <strong>"${data.query}"</strong>`;
      }
      list.prepend(info);
    },
    noResults: true,
    maxResults: 20,
    tabSelect: true,
  },
  resultItem: {
    element: (item, data) => {
      // Modify Results Item Style
      item.style = "display: flex; flex-flow: column nowrap; justify-content: space-between;";
      // Modify Results Item Content
      item.innerHTML = `
      <span style="font-size: 14px; font-weight: bold; color: rgb(92,92,92); padding: 0;">
      ${data.value.tags.length > 0 ? data.value.tags.map( t => `<a href="/tags/${t.substring(1)}">${t}</a>`).join(' ') + ' &gt;' : ''}
      ${data.value.state}
      </span>
      <span style="font-size: 12px; text-overflow: ellipsis; white-space: nowrap; overflow: hidden; padding: 3px 0 3px 9px;">
        ${data.match}
      </span>`;
    },
    highlight: true,
  },
  events: {
    input: {
      focus: () => {
        if (autoCompleteJS.input.value.length) autoCompleteJS.start();
      },
    },
  },
});

autoCompleteJS.input.addEventListener("selection", function (event) {
  const feedback = event.detail;
  const selection = feedback.selection.value[feedback.selection.key];
  document.querySelector(".selection").innerHTML = selection;
  autoCompleteJS.input.value = selection;
});
