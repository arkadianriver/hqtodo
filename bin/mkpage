#!/usr/bin/env node

const fs = require('fs');
const app = require('../app');
const http = require('http');

function normalizePort(val) {
  var port = parseInt(val, 10);
  if (isNaN(port)) {
    // named pipe
    return val;
  }
  if (port >= 0) {
    // port number
    return port;
  }
  return false;
}

let port = normalizePort(process.env.PORT || '3001');
app.set('port', port);    

// assist https://github.com/expressjs/express/issues/1366#issuecomment-68693264
let server = app.listen(port, function() {
  console.log('Listening =^.^=');
  fs.mkdirSync('./build/css', { recursive: true });

  const pages = [
    ['/ejs', '/index.html'],
    ['/css/style.css', '/css/style.css'],
    ['/ejs/tags/xedu', '/xedu.html'],
    ['/ejs/tags/woot', '/woot.html'],
    ['/ejs/tags/vidz', '/vidz.html'],
    ['/ejs/tags/tools', '/tools.html'],
    ['/ejs/tags/prjd', '/prjd.html'],
    ['/ejs/tags/prjc', '/prjc.html'],
    ['/ejs/tags/prjb', '/prjb.html'],
    ['/ejs/tags/prja', '/prja.html'],
    ['/ejs/tags/personal', '/personal.html'],
    ['/ejs/tags/f24', '/f24.html'],
    ['/ejs/tags/edu', '/edu.html'],
    ['/ejs/tags/admin', '/admin.html'],
    ['/doc', '/doc.html']
  ];

  const makePage = (page) => {
    if (!Array.isArray(page) || !page.length) return;
    const [ endpoint, htmlpage ] = page;
    // assist https://stackoverflow.com/a/19539521/5360420
    http.request(`http://localhost:${port}${endpoint}`, res => {
      let str = '';
      res.on('data', chunk => {
        str += chunk;
      });
      res.on('error', (err) => {
        console.log(err);
      })
      res.on('end', () => {
        fs.writeFileSync(`./build${htmlpage}`, str);
        console.log(`Built ${htmlpage}`);
      });
    }).end();
  };

  // simple request throttle - assist: https://stackoverflow.com/a/64254202
  let i = 0;
  const requestId = setInterval(() => {
    if (i > pages.length) {
      console.log('Closing the server.');
      clearTimeout(requestId);
      server.close();
    }
    makePage(pages[i++]);
  }, 200);

});
